+++
title="Algorithmic Composition Examples"
chapter=true
weight=55
+++


*** chapter 2

*Examples with Routines and Loops*

#+BEGIN_SRC js
(
/*
Algorithmic composition paradigms
BA 181502
Objective: create a Routine and repeat it n times
*/

fork{//this alternative syntax goes for Routine

10.do({//here goes the repetition (10 times)

a = {SinOsc.ar(XLine.kr(100, 500, 4), 0, 0.4)}.play;
4.wait;
a.release;
b = SinOsc.ar(XLine.kr(500, 100, 4), 0, 0.4)}.play;
4.wait;
b.release;

});//loop closes here 
}//fork (Routine) closes here
)
#+END_SRC


 *probability-stochastic*


#+BEGIN_SRC js
/* BA 181502
 Stochastic example 1
Objective: Create two sounds one after the other and after a couple of seconds free one of them using probability. (Rolling a Dice)
*/

(
fork{
	"1".postln;
~a = {Out.ar(0, SinOsc.ar(440, 0, 0.5))}.play;
	4.wait;
	"2".postln;
	~b = {Out.ar(1, SinOsc.ar(443, 0, 0.5))}.play;
	4.wait;

	"propability".postln;
	
~k = 
	{
		fork{
	var x = [1,2, 3, 4, 5, 6].choose.postln;
	if(x>3,{~a.free},{~b.free});

	"a or b is running?".postln;
	
		if(x>3, {"b is running".postln},{"a is running".postln}
		);
4.wait;
			if(~a.isRunning, {~a.free}, {~b.free});
			if(~b.isRunning, {~b.free}, {~a.free});
			
		};			
}.value;
	
	
};
)
#+END_SRC

*With complex sounds*

#+BEGIN_SRC js



/*
BA 181502
Stochastic example 2
Objective: Create two sounds and free one of them using probability. (Rolling a Dice)
*/

(
fork{
	"sound 1".postln;
	~a = {Out.ar([0,1], Resonz.ar(SinOsc.ar(Dust.kr(XLine.kr(10, 1500, 1500, 100, 40, 4), XLine.kr(100, 400, 400, 200)), 0.1.rand, LFNoise1.kr(20)), 440.rand, 0.7)*Saw.ar(XLine.kr(44, 20, 44, 20, 4)).dup)}.play;
	0.1.wait;
	~a.postln;
	4.wait;
	"sound 2".postln;
	~b = {Out.ar([0,1], Resonz.ar(SinOsc.ar(SinOsc.ar(XLine.kr(10, 1500, 150, 10, 40, 4), 10, XLine.kr(100, 400, 400, 200)), 0, LFNoise1.kr(20)*0.6), 240.rand, 0.7)*Saw.ar(XLine.kr(44, 20, 440, 20, 4)).dup)}.play;
		0.1.wait;
	~b.postln;
	4.wait;

	"rolling a dice".postln;
	
	~k = 
	{
		fork{
	var x = [1,2, 3, 4, 5, 6].choose.postln;
	if(x>3,{~a.free},{~b.free});

	"a or b is running?".postln;
	
		if(x>3, {"b is running".postln},{"a is running".postln}
		);
4.wait;
			if(~a.isRunning, {~a.free}, {~b.free});
			if(~b.isRunning, {~b.free}, {~a.free});
			
		};			
}.value;

	
};
)

#+END_SRC


[
{
	"uri": "https://vasileios.github.io/ac-sc/el/",
	"title": "ΑΣ",
	"tags": [],
	"description": "",
	"content": " ΑΣ Αλγοριθμική σύνθεση και δόμηση ήχου \u0026ldquo;Τεχνών Ήχου και Εικόνας\u0026rdquo; Ιόνιο Πανεπιστήμιο\nΔιδάσκων: Βασίλης Αγιομυργιανάκης\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/",
	"title": "Εισαγωγή",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Αλγοριθμική Σύνθεση Ο αλγόριθμος είναι:\n Ένα σύνολο μαθηματικών οδηγιών που πρέπει να ακολουθηθούν για τον υπολογισμό μιας απάντησης σε ένα μαθηματικό πρόβλημα. Μια συστηματική διαδικασία που παράγει - σε ένα πεπερασμένο αριθμό βημάτων την απάντηση σε μια ερώτηση ή τη λύση ενός προβλήματος. [...] (ιδίως για υπολογιστές) ένα σύνολο κανόνων που πρέπει να ακολουθηθούν για να επιλυθεί ένα συγκεκριμένο πρόβλημα. (Nierhaus 2009 σ.2)  "
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/hisrory/",
	"title": "Ιστορία",
	"tags": [],
	"description": "",
	"content": "chapter 1 Ιστορία Μουσική και μαθηματικά.\nΠυθαγόρας\nΟ ήχος των σφυριών των σιδηρουργών έκανε τον Πυθαγόρα να βγάλει σημαντικά συμπεράσματα σχετικά με τη φύση του τονισμού και τα μαθηματικά με βάση την αρμονία μετά τη σύγκριση των τονισμών που έγιναν απο τα σφυριά.\nGuido D'Arrezo\nΕπίσης, στο πλαίσιο της αλγοριθμικής σύνθεσης, γύρω στο AD 1000 είχε αναπτυχθεί η πρώτη προσέγγιση στην αυτόματη γένεση της μουσικής δομής. Ο Guido του Arezzo (γύρω στο 991-1031) συνέβαλε στην ανάπτυξη της σημειογραφίας, ανέπτυξε το solmization και ήταν ένας σημαντικός μουσικός θεωρητικός της μεσαιωνικής εποχής. Ένα από τα σημαντικότερα έργα του, το \"Micrologus\", είναι η πρώτη συλλογή της μονοδικής και πολυφωνικής πρακτικής τραγουδιού.\nArs Magna\nΑν οι προαναφερθείσες αρχές αντιπροσωπεύουν τις αρχές της αλγοριθμικής χειραγώγηση του μουσικού υλικού, τότε το \"Ars Magna\" του Raimundus Lullus διαπραγματεύεται αποτελεσματικά την έννοια του υπολογιστή (μουσικό) σύστημα.\nKircher\nΣτο εξαντλητικό μουσικολογικό έργο του \"Musurgia Universalis\" από το 1650, Ο Kircher κατασκεύασε, μεταξύ άλλων, ένα σύστημα αλγοριθμικής σύνθεσης. Το σύστημα αυτό αποτελείται από τρεις κατηγορίες:\nδείτε εδω περισσότερα\nLeibniz (1646-1716)\n\"Καθολική γλώσσα\"\nΤυποποίηση των επιστημών.\n..υποδομήστε τη λύση οποιουδήποτε επιστημονικού προβλήματος μέσα σε ένα ολοκληρωμένο Λογισμό.\nΗ έννοια της καθολικής γλώσσας ήταν επίσης ένα όραμα διακρατικής επικοινωνίας στην Ευρώπη μετά τον τριάντα χρόνια πολέμου.\nΠροϋποθέσεις του προγράμματος:\n Προκατασκευή εγκυκλοπαίδειας (ορισμοί) για τις τυπικές επιστήμες.   Ανάπτυξη ενός επίσημου συστήματος, δηλαδή \"lingua universalis\", στο οποίο μπορούν να κωδικοποιηθούν όλοι οι επιστημονικοί όροι.   Δημιουργία του \"λογισμού εγκυρότητας\" που θα επιτρέψει τη σύνδεση όλων των όρων της παγκόσμιας γλώσσας με λογικές λειτουργίες.  Χρήση συμβόλων για την αναπαραγωγή όλων των επιστημονικών όρων.\nΩς σύνολο συμβόλων, ο Λαίμπνιτς επέλεξε να είναι η ομάδα των φυσικών αριθμών.\nΓια παράδειγμα,\n  Πράγμα = 2  Όν = 6 = 2 * 3  Ανθρώπινο Όν = 30 = 6 * 5  κ.λπ.  \"Η μουσική είναι μια ασκούμενη μαθηματική εξάσκηση, το nescientis είναι αριθμητική animi\" (\"Η μουσική είναι μια κρυμμένη αριθμητική άσκηση της ψυχής, η οποία δεν γνωρίζει ότι μετράει\").\nΥπολογιστική διαδικασία \u0026 μηχανές\nΗ μηχανοποίηση των υπολογιστικών διαδικασιών, 1617 ξεκίνησε από τη Σκωτία απο τον μαθηματικό John Napier και Jost Bürgi (1552-1632) πρωτοστάτησαν στο πεδίου των λογαρίθμων με το \"Mirifici logarithmorum canonis\" descriptio \"που εμφανίζεται το 1614, σχεδιασμένο για πολλαπλασιασμό και διαίρεση, με βάση την αρχή του Πυθαγόρειου άβακα. (1550-1617).\nΟ άβακάς του Napier, γνωστό και ως οστά του Napier (Napier's bones).\n../history/NapiersBones.jpg/\nΠαρόμοια με τα οστά του Napier:\nCaspar Schott (1608-1666), \"Organum Mathematicum\" (1668)\nΗ ιδέα του Leibniz για την εφαρμογή του δυαδικού αριθμητικού συστήματος σε ένα αυτοματισμό πραγματοποιήθηκε με μια εφεύρεση στην κλωστοϋφαντουργία. Το έτος 1725 ο Βασίλειος Μπουτσών ανέπτυξε το πρώτο σύστημα αυτόματου ελέγχου αργαλειών.\nBabbage-Lovelace 18ος αιώνας\nΒασικός στόχος του Babbage είναι η μηχανοποίηση των διαδικασιών υπολογισμού, όπως αυτές απαιτούνται για τη δημιουργία πινάκων λογαρίθμου.\nΠαράλληλα με το Babbage, η Ada Countess of Lovelace (1815-1852) διαδραμάτισε σημαντικό ρόλο. Ήταν ένας αυτοδίδακτος μαθηματικός και συνεργάστηκε με τον Babbage στην έννοια του «αναλυτικού κινητήρα». Το 1840, ο Babbage έδωσε μια σειρά μαθημάτων ανάγνωσης στο Τορίνο για την εφεύρεσή του. Με βάση αυτό το υλικό, ο Ιταλός μαθηματικός Luigi Federico Menabrea δημοσίευσε το άρθρο «Κουρτίνας για την Αναλυτική Μηχανή του Τσαρλς Μπάμπατζ» το 1842. Ada Lovelace μετάφραστε αυτό το κείμενο στα αγγλικά το 1843 και πρόσθεσε τις δικέ της αναλυτικές εκτιμήσεις για το υλικό, συμπεριλαμβανομένων των εννοιώ του βρόχου, της υπορουτίνας και του άλματος υπό όρους. Η κοντέσσα της Lovelace θεωρείται η πρώτη γυναίκα προγραμματιστής στην ιστορία του προγραμματισμού ηλεκτρονικών υπολογιστών - το πρόγραμμα Ada, που αναπτύχθηκε στη δεκαετία του 1970, πήρε το όνομά της.\nΕπιπλέον, μπορούν να βρεθούν οι πρώτες εφαρμογές αλγορίθμων για εργασίες σύνθεσης στο δημοφιλές \"μουσικό παιχνίδι με ζάρια\" τον 18ο αιώνα. (Nierhaus 2009)\nΛογικές λειτουργίες\nBoole (1815-1864)\nΟ George Boole (1815-1864) ο οποίος ανέπτυξε στο συγγραφικό του έργο «Η Μαθηματική Ανάλυση της Λογικής» (1847) και «Διερεύνηση των νόμων της σκέψης» (1854) έχει εκπροσωπήσει τον φορμαλισμό για την παρουσίαση της προτασιακής λογικής.\nShannon (1916-2001)\nAlgebra Boolean σε ηλεκτρονικά κυκλώματα\nX1V (Χ4 ^ (X2VX3))\nο Γιάννης Ξενάκης (1922-2001) σε διάφορες συνθέσεις του εφάρμοσε λογικούς συνδυασμούς για τη δημιουργία μουσικής δομής από τη θεωρία των κόσκινων.\nΕπίσης, οι \"φορμαλιστές\" του David Hilbert (1862-1943) είναι βασικά μαθηματικών χώρων σε αξιωματική βάση.\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/sc-examples/",
	"title": "Code Examples",
	"tags": [],
	"description": "",
	"content": "Chapter 2 SuperCollider examples of Sound Synthesis techniques and Algorithmic Composition.\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/sc-examples/supercollider/",
	"title": "SuperCollider",
	"tags": [],
	"description": "",
	"content": "SuperCollider SuperCollider From: SuperCollider\nBasics SuperCollider is a platform for audio synthesis and algorithmic composition, used by musicians, artists, and researchers working with sound. It is free and open source software available for Windows, macOS, and Linux.\nSuperCollider features three major components:  scsynth, a real-time audio server, forms the core of the platform. It features 400+ unit generators (\"UGens\") for analysis, synthesis, and processing. Its granularity allows the fluid combination of many known and unknown audio techniques, moving between additive and subtractive synthesis, FM, granular synthesis, FFT, and physical modelling. You can write your own UGens in C++, and users have already contributed several hundred more to the sc3-plugins repository. sclang, an interpreted programming language. It is focused on sound, but not limited to any specific domain. sclang controls scsynth via Open Sound Control. You can use it for algorithmic composition and sequencing, finding new sound synthesis methods, connecting your app to external hardware including MIDI controllers, network music, writing GUIs and visual displays, or for your daily programming experiments. It has a stock of user-contributed extensions called Quarks. scide is an editor for sclang with an integrated help system.  Find recordings folder thisProcess.platform.recordingsDir;  Sound synthesis techniques Introduction to sound synthesis and sound design (origin, definition, procedures, application fields).\n  SuperCollider example:  Creating a sine wave  {SinOsc.ar(440, 0, 0.3)}.play    Additive synthesis  {SinOsc.ar(440, 0, 0.4)+SinOsc.ar(660, 0, 0.3)}.play;    Subtractive synthesis  {LPF.ar(Saw.ar(440, 0.4), [3520, 4400, 5280], 0.3)}.play;    Granular synthesis  SynthDef(\\granular, {|out = 0, trig = 1, dur = 0.1, sndbuf, pos = 0.2, rate = 1, pan = 0, amp = 0.4| var env, source; env = EnvGen.kr(Env.adsr, 1, doneAcion: 2); source = Out.ar(out, GrainBuf.ar(2, Impulse.kr(trig), dur, sndbuf, rate, pos, 2, pan, envbuf) * env) }).add;  Input Devices Musical gestures can be expressed through a wide range of body movements. Dozens of input devices have been developed to capture these gestures. (Roads 1996: 625)\n  Switch  Push buttons  Linear potentiometer or fader  Trackball  Joystick  Game Paddles  etc  Instrument design Bela\nCapacitive touch sensor-raspberry pi\nMPR121\n  To be continued...  "
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/paradigms/",
	"title": "Παραδείγματα",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Παραδείγματα Μαρκοβιανά Μοντέλα - Markov models Τα μοντέλα Markov χρησιμοποιούνται ως επί το πλείστον στον τομέα της μίμησης του στυλ μουσικής. Έχουν χρησιμοποιηθεί από τον Χίλερ και τον Ξενάκη, σαν τεχνικές σύνθεσης μουσικής.\nGenerative grammars Chomsky's generative grammars generation of musical structure\nΜεταβατικά δίκτυα-Transition networks Το πρόγραμμα του David Cope “EMI” Το “EMI” δημιουργεί απομιμήσεις αφού πρώτα αναλύσει έναν επαρκή αριθμό συνθέσεων ενός συγκεκριμένου είδους όπως για παράδειγμά νόμους και κανόνες σύνθεσης της σονάτας.\nEMI history\nchaos and self-similarity Fractals, Lindenmayer systems\n Random walk-brown noise, biology - Growth of living organisms such algea and plants.  Γενετικοί αλγόριθμοι-Genetic algorithms Οι γενετικοί αλγόριθμοι ώς μιά κλάση των εξελικτικών αλγορίθμων (evolutionary algorithms), για παράδειγμα, στρατηγικών μοντάλων για φυσικά συστήματα, είναι στοχαστικές τεχνικές αναζήτησης.Η ορολογία των γενετικών αλγορίθμων συμπεριλαμβανομένης της \"επιλογής\", της \"μετάλλαξης\", της \"επιβίωσης του ικανότερου\", κλπ. σχετίζεται με τις διαδικασίες βιολογικής επιλογής.\nΑπό τη δεκαετία του 1960, οι Ingo Rechenberg και Hans-Paul Schwefel εισήγαγαν τις στρατηγικές εξέλιξης στο Τεχνικό Πανεπιστήμιο του Βερολίνου και στη δεκαετία του 1970 οι Αμερικανοί John H. Holland και David E. Goldberg ανέπτυξαν γενετικούς αλγόριθμους. Τα μοντέλα Rechenberg και Schwefel βασίζονται σε μια γραφική παράσταση και έχουν διαμορφωθεί με βάση βιολογικές διαδικασίες για την ανάπτυξη τεχνικών τεχνικών βελτιστοποίησης.\nΚυτταρικά αυτόματα-Cellular automata Ο Miranda περιγράφει διάφορες εφαρμογές μοντέλων κυτταρικών αυτομάτων (CA) για μουσικές εφαρμογές. Σε ένα από αυτά, το Chaosynth, ένας χημικός ταλαντωτής χρησιμοποιείται για την παραμετροποίηση μιας μηχανής κοκκώδους σύνθεσης (Miranda 2000).\nNeural networks Artificial intelligence Swarm Algorithms  Collective Behaviour   Swarm behaviour  Mathematical models to simulate and anderstand the behaviour.\nThree basic rules\n Move in the same direction as your neighbours Remain close to your neighbours Avoid collisions with your neighbours  Clever Algorithms\nSwarm Music\nSwarms tutorials\n Tim Blackwell’s work on Swarm music  The model is based on three simple principles: separation, alignment and cohesion. Separation means each bird must steer to avoid bumping into each other or any other object in the environment. Alignment keeps each individual moving in a similar path by taking the average heading of local flockmates. Cohesion keeps the flock together as each bird steers towards the average position of local flockmates. Blackwell has employed a similar algorithm to parameterise a granular synthesis engine, creating an eerily lifelike movement of sound swarming through time. (Husbands 2007 22)\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/tuning_scales/",
	"title": "Tuning-Scales",
	"tags": [],
	"description": "",
	"content": "chapter 1 Scales Circle of fiths is the relationship among the 12 tones of the chromatic scale, their corresponding key signatures, and the associated major and minor keys.\n../images/CircleOfFifths.jpg\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/references/",
	"title": "References",
	"tags": [],
	"description": "",
	"content": "Chapter 1 References Dean, Roger. and McLean, Alex (eds.) 2018. The Oxford Handbook of Algorithmic Music. Oxford University Press.\nFarnell, Andy. 2010. Designing Sound. Cambridge, Mass: The MIT Press.\nHusbands, Phil, Peter Copley, Alice Eldridge, and James Mandelis. 2007. ‘An Introduction to Evolutionary Computing for Musicians’. In Evolutionary Computer Music, 1–27. Springer, London. https://doi.org/10.1007/978-1-84628-600-1_1.\nMiranda, Eduardo R., and John Al Biles. 2007. Evolutionary Computer Music. Springer Science \u0026 Business Media.\nNierhaus, Gerhard. 2008. Algorithmic Composition: Paradigms of Automated Music Generation. 2009 edition. Wien ; New York: Springer.\nRoads, Curtis. 1996. The Computer Music Tutorial. Edition Unstated edition. Cambridge, Mass: The MIT Press. ———. 2004. Microsound. PAP/CDR edition. Cambridge, Mass.: The MIT Press.\nSethares, William A. 2004. Tuning, Timbre, Spectrum, Scale. 2nd edition. London: Springer.\nTolonen, T., Välimäki, V., and Karjalainen, M. 1998. Evaluation of Modern Sound Synthesis Methods. HUT.\nTrautmann, Lutz, and Rudolf Rabenstein. 2012. Digital Sound Synthesis by Physical Modeling Using the Functional Transformation Method. Springer Science \u0026 Business Media.\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]
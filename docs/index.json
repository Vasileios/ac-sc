[
{
	"uri": "https://vasileios.github.io/ac-sc/",
	"title": "AC",
	"tags": [],
	"description": "",
	"content": " AC Classes Algorithmic Composition \u0026amp; Sound Synthesis\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/introduction/history/",
	"title": "History",
	"tags": [],
	"description": "",
	"content": "Chapter 1 History Music and maths.\nPythagoras\nThe sound of blacksmiths hammering had led Pythagoras to important conclusions about the nature of pitch and the mathematical basis of harmony after comparing the pitches made by hammers.\nGuido D'Arrezo\nAlso in the context of algorithmic composition, by around AD 1000 a first approach to automatic musical structure genesis had been developed. Guido of Arezzo (around 991–1031) contributed considerably to the development of notation, developed solmization and was an important music theorist of the medieval era. One of his most significant works, “Micrologus,” is the earliest compendium of monodic and polyphonic singing practice.\nArs Magna\nIf the abovementioned principles represent the beginnings of algorithmic manipulation of musical material, then the “Ars Magna” of Raimundus Lullus effectively realizes the concept of a computer (music) system.\nKircher\nIn his exhaustive musicologist work “Musurgia Universalis” from 1650, Kircher developed amongst others a system of algorithmic composition. This system consists of three categories of labeled wooden sticks (syntagmas) on which both numbers and rhythmic values are engraved.\nSee here more\nLeibniz (1646–1716)\n“universal language”\nFormalization of the sciences.\n..enable the solution of any scientific problem within a comprehensive calculus.\nThe concept of a universal language was also a vision of cross-national communication in Europe after the Thirty-Year War.\nProgramm's preconditions:\n Precompile encyclopedia of all terms that are necessary to formalize the sciences;   a formal system was to be developed, namely the “lingua universalis,” within which all scientific terms could be coded;   creating the “calculus ratiocinator” that should enable the connection of all terms of the universal language by means of logical operations.  Use of symbols to represent all scientific terms.\nAs a set of symbols, he chose the group of natural numbers.\nFor example,\n  Thing = 2  Being = 6=2*3  Human Being = 30=6*5  etc.  “Musica est exercitium arithmeticae occultum, nescientis se numerare animi” (“Music is a hidden arithmetic exercise of the soul, which does not know that it is counting.”).\nCalculating process \u0026 machines\nA mechanization of calculating processes, 1617 by the Scottish mathematician John Napier and Jost Bu ̈rgi (1552–1632) pioneered in the field of logarithms with his “Mirifici logarithmorum canonis descriptio” appearing in 1614, designed a device for multiplication and division, based on the principle of the Pythagorean abacus. (1550–1617).\nThe Napier’s abacus, also known as Napier’s bones.\n../images/NapiersBones.jpg\nSimilar to Napier's Bones:\nCaspar Schott (1608–1666), “Organum Mathematicum” (1668)\nLeibniz’ idea of applying the binary numeral system to an automaton was realized by an invention in the textile industry. In the year 1725, Basile Bouchon developed the first system for an automatic control of looms.\nBabbage-Lovelace 18th century\nBabbage’s main objective was the mechanization of calculation processes such as those that are required for the generation of logarithm tables.\nAlongside Babbage, Ada Countess of Lovelace (1815–1852) played an important role. She was a self-educated mathematician and worked together with Babbage on the concept of the “analytical engine.” In 1840, Babbage gave a course of lectures in Turin on his invention. On the basis of this material, the Italian mathematician Luigi Frederico Menabrea published the article “Notions sur la machine analytique de Charles Babbage” in 1842. Ada Lovelace translated this text to English in 1843 and added her own detailed considerations to the material, including the concepts of the loop, subroutine and the conditional jump. The Countess of Lovelace is considered to be the first female programmer in the history of informatics – the programming language Ada, developed in the 1970s, is named after her.\nFurthermore, first applications of algorithms for compositional tasks can be found in the popular “musical dice game” in the 18th century. (Nierhaus 2009)\nLogical Operations\nBoole (1815-1864)\nGeorge Boole (1815– 1864) developed in his publications “The Mathematical Analysis of Logic” (1847) and “An Investigation of the Laws of Thought” (1854) a formalism for the repre- sentation of propositional logic.\nShannon (1916-2001)\nBoolean algebra in electronic circuits\nX1V(X4^(X2VX3))\nIn application of logical combinations for the generation of musical structure is represented by the theory of sieves applied by Iannis Xenakis (1922–2001) in a number of his compositions\nThe “formalists” under David Hilbert (1862–1943) aimed at putting basic mathematical premises on an axiomatic basis. The position of the formalists was later strengthened by the “Principia Mathemat- ica” (1910–1913). In this essential work, Russel and Whitehead, referring to Georg Cantor’s (1845–1918) set theory as well as the works of Frege and Giuseppe Peano (1858–1932), succeeded in putting some fields of mathematics on a confirmed ax- iomatic basis. In 1928, Hilbert and Wilhelm Ackermann’s (1896–1962) “Principles of Theoretical logic.\nAn interesting aspect of this work is the idea that there could be an algorithm being able to decide for any first order logical expression if its statement is true or false. This question known as the decidability problem may also be demonstrated by means of the halting problem of a Turing machine (see below). The mentioned works made the formalists’ objec- tives seem increasingly within reach, until Kurt Go ̈del (1906–1978) in his publica- tion“U ̈berformalunentscheidbareSa ̈tzederPrincipiaMathematicaundverwandter Systeme” (“On Formally Undecidable Propositions of the Principia Mathematica and Related Systems”) of 1931 set clear limits to their efforts.\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/introduction/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Algorithmic Composition Algorithm is:\n A set of mathematical instructions that must be followed in a fixed order, and that, especially if given to a computer, will help to calculate an answer to a mathematical problem [1]. A systematic procedure that produces – in a finite number of steps the answer to a question or the solution of a problem [2]. [...] (especially computing) a set of rules that must be followed when solving a particular problem [4]. (Nierhaus 2009 p.2)  "
},
{
	"uri": "https://vasileios.github.io/ac-sc/introduction/paradigms/",
	"title": "Paradigms",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Paradigms Markov models Markov models are for the most part employed in the field of style imitation, but also, for example by Hiller and Xenakis, for applications of genuine composition.\nGenerative grammars Chomsky's generative grammars generation of musical structure\nTransition networks David Cope’s program “EMI” “EMI” generates style imitations after having analyzed a sufficient number of compositions of a particular genre.\nEMI history\nchaos and self-similarity Fractals, Lindenmayer systems\nGenetic algorithms Cellular automata Miranda describes various implementations of cellular automata (CA) models for musical applications. In one of these, Chaosynth, a chemical oscillator CA is used to parameterise a granular synthesis engine (Miranda 2000).\nNeural networks Artificial intelligence Swarm Algorithms  Collective Behaviour   Swarm behaviour  Mathematical models to simulate and anderstand the behaviour.\nThree basic rules\n Move in the same direction as your neighbours Remain close to your neighbours Avoid collisions with your neighbours  Clever Algorithms\nSwarm Music\nSwarms tutorials\n Tim Blackwell’s work on Swarm music  The model is based on three simple principles: separation, alignment and cohesion. Separation means each bird must steer to avoid bumping into each other or any other object in the environment. Alignment keeps each individual moving in a similar path by taking the average heading of local flockmates. Cohesion keeps the flock together as each bird steers towards the average position of local flockmates. Blackwell has employed a similar algorithm to parameterise a granular synthesis engine, creating an eerily lifelike movement of sound swarming through time. (Husbands 2007 22)\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://vasileios.github.io/ac-sc/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]
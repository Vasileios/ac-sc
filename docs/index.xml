<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation for Algorithmic Composition</title>
    <link>https://vasileios.github.io/ac-sc/</link>
    <description>Recent content on Documentation for Algorithmic Composition</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://vasileios.github.io/ac-sc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AC</title>
      <link>https://vasileios.github.io/ac-sc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/</guid>
      <description>Chapter 1 define _foo  Algorithmic Composition Algorithm is:
 A set of mathematical instructions that must be followed in a fixed order, and that, especially if given to a computer, will help to calculate an answer to a mathematical problem [1]. A systematic procedure that produces – in a finite number of steps the answer to a question or the solution of a problem [2]. [...] (especially computing) a set of rules that must be followed when solving a particular problem [4].</description>
    </item>
    
    <item>
      <title>History</title>
      <link>https://vasileios.github.io/ac-sc/introduction/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/introduction/history/</guid>
      <description>Chapter 1 History The history of Algorithmic Composition traced back to antiquity. Pythagoras found that maths can be tranlated to music and through this ...
../images/CircleOfFifths.jpg
Primary principles of automated information processing can already be found in the 13th century. Through the works of Charles Babbage and Ada Lovelace, The history of algorithmic composition has its beginning shortly after the turn of the first millennium with a system developed by Guido of Arezzo enabling the generation of melodic material from texts, spans over the application of algorithmic principles in the developing complex polyphony and is also found in the “composition machines” of Athanasius Kircher in the Baroque period.</description>
    </item>
    
    <item>
      <title>SuperCollider</title>
      <link>https://vasileios.github.io/ac-sc/sc-examples/supercollider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/sc-examples/supercollider/</guid>
      <description>SuperCollider SuperCollider From: SuperCollider
Basics SuperCollider is a platform for audio synthesis and algorithmic composition, used by musicians, artists, and researchers working with sound. It is free and open source software available for Windows, macOS, and Linux.
SuperCollider features three major components:  scsynth, a real-time audio server, forms the core of the platform. It features 400+ unit generators (&#34;UGens&#34;) for analysis, synthesis, and processing. Its granularity allows the fluid combination of many known and unknown audio techniques, moving between additive and subtractive synthesis, FM, granular synthesis, FFT, and physical modelling.</description>
    </item>
    
    <item>
      <title>Paradigms</title>
      <link>https://vasileios.github.io/ac-sc/introduction/paradigms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/introduction/paradigms/</guid>
      <description>Chapter 1 Paradigms  Markov models  Markov models are for the most part employed in the field of style imitation, but also, for example by Hiller and Xenakis, for applications of genuine composition.
 Generative grammars  Chomsky&#39;s generative grammars generation of musical structure
 Transition networks  David Cope’s program “EMI” “EMI” generates style imitations after having analyzed a sufficient number of compositions of a particular genre.
http://www.computerhistory.org/atchm/algorithmic-music-david-cope-and-emi/</description>
    </item>
    
  </channel>
</rss>
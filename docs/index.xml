<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Αλγοριθμική Σύνθεση</title>
    <link>https://vasileios.github.io/ac-sc/</link>
    <description>Recent content on Αλγοριθμική Σύνθεση</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://vasileios.github.io/ac-sc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ιστορία</title>
      <link>https://vasileios.github.io/ac-sc/introduction/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/introduction/history/</guid>
      <description>chapter 1 Ιστορια Μουσική και μαθηματικά.
Πυθαγόρας
Ο ήχος των σφυριών των σιδηρουργών έκανε τον Πυθαγόρα να βγάλει σημαντικά συμπεράσματα σχετικά με τη φύση του τονισμού και τα μαθηματικά με βάση την αρμονία μετά τη σύγκριση των τονισμών που έγιναν απο τα σφυριά.
Guido D&#39;Arrezo
Επίσης, στο πλαίσιο της αλγοριθμικής σύνθεσης, γύρω στο AD 1000 είχε αναπτυχθεί η πρώτη προσέγγιση στην αυτόματη γένεση της μουσικής δομής. Ο Guido του Arezzo (γύρω στο 991-1031) συνέβαλε στην ανάπτυξη της σημειογραφίας, ανέπτυξε το &#39;solfeggio&#39; (1025) και ήταν ένας σημαντικός μουσικός θεωρητικός της μεσαιωνικής εποχής.</description>
    </item>
    
    <item>
      <title>SuperCollider</title>
      <link>https://vasileios.github.io/ac-sc/sc-examples/supercollider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/sc-examples/supercollider/</guid>
      <description>chapter 2 SuperCollider SuperCollider From: SuperCollider
Basics SuperCollider is a platform for audio synthesis and algorithmic composition, used by musicians, artists, and researchers working with sound. It is free and open source software available for Windows, macOS, and Linux.
SuperCollider features three major components:  scsynth, a real-time audio server, forms the core of the platform. It features 400+ unit generators (&#34;UGens&#34;) for analysis, synthesis, and processing. Its granularity allows the fluid combination of many known and unknown audio techniques, moving between additive and subtractive synthesis, FM, granular synthesis, FFT, and physical modelling.</description>
    </item>
    
    <item>
      <title>Παραδείγματα</title>
      <link>https://vasileios.github.io/ac-sc/introduction/paradigms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/introduction/paradigms/</guid>
      <description>Chapter 1 Παραδειγματα Μαρκοβιανά Μοντέλα - Markov models time dependent random variables (TDRV)
Στο πλαίσιο των πειραμάτων και παρατηρήσεων σχετικά με την TDRV έχουν ήδη γίνει από τους Pierre Simon de Laplace και Daniel Bernoulli. Η πρώτη εφαρμογή αυτής της μεθόδου ήταν μια εκτενή ανάλυση κειμένου από τον Markov: &#34;Το 1913 ο Markov είχε δημοσιεύσει την τρίτη έκδοση του εγχειριδίου του. Σε αυτή την έκδοση γράφει: «Ας τελειώσουμε το άρθρο και ολόκληρο το βιβλίο με ένα καλό παράδειγμα TDRV, που μπορούν να θεωρηθούν ως μια απλή αλυσίδα» (chain).</description>
    </item>
    
    <item>
      <title>Κλίμακες και Χορδίσματα</title>
      <link>https://vasileios.github.io/ac-sc/introduction/tuning_scales/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/introduction/tuning_scales/</guid>
      <description>chapter 1 Scales Circle of fiths is the relationship among the 12 tones of the chromatic scale, their corresponding key signatures, and the associated major and minor keys.
Circles of Fifths
Other Tunings and Scales
 Interval (διαστήματα)    2/1-octave  3/2-fifth  9/8-semitone  4/3-    Pythagorian Interval  Note  Interval from D Formula  Frequency - ratio  Size (cents)  ET-dif (cents)  A♭  diminished fifth  588.</description>
    </item>
    
    <item>
      <title>Glossary</title>
      <link>https://vasileios.github.io/ac-sc/introduction/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/introduction/glossary/</guid>
      <description>chapter 1 Glossary Mathematics
premise a statement that is assumed to be true.
Physics
frequency the number of times that a wave, especially a light, sound, or radio wave, is produced within a particular period, especially one second.
amplitude the distance between the top and the bottom of a wave.
Computing-SC
function lamda calculus
SC Function a = { [100, 200, 300].choose };
SC Event An Event is a SC Environment with a &#39;play&#39; method.</description>
    </item>
    
    <item>
      <title>References</title>
      <link>https://vasileios.github.io/ac-sc/introduction/references/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/introduction/references/</guid>
      <description>Chapter 1 References Dean, Roger. and McLean, Alex (eds.) 2018. The Oxford Handbook of Algorithmic Music. Oxford University Press.
Farnell, Andy. 2010. Designing Sound. Cambridge, Mass: The MIT Press.
Holtzman, Steven. 1981. Generative Grammars for Music Composition. Computer Music Journal, Vol.5, No.1, pp. 51-64. The MIT Press.
Husbands, Phil, Peter Copley, Alice Eldridge, and James Mandelis. 2007. ‘An Introduction to Evolutionary Computing for Musicians’. In Evolutionary Computer Music, 1–27. Springer, London.</description>
    </item>
    
    <item>
      <title>Logical Expressions</title>
      <link>https://vasileios.github.io/ac-sc/introduction/logicalex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vasileios.github.io/ac-sc/introduction/logicalex/</guid>
      <description>chapter 1 LE Logical Expressions in SuperCollider
Logical expressions =true or false= 10==10 // equal to =&amp;gt;true... 10 !=15 // not equal to 10&amp;gt;5 // greater than 10&amp;lt;14 // less than 10 &amp;gt;= 10 // greater than or equal to 10 &amp;lt;= 10 // lees than or equal to 11.odd // it is odd 10.even // it is even 10.isInteger // it is integer 10.129.isFloat // it is float 1.odd.and(2.even) // both conditions 1.</description>
    </item>
    
  </channel>
</rss>